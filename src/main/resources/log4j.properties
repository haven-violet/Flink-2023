# 指定RootLogger顶级父元素默认配置信息
# 指定日志级别=trace, 使用的appender为 console, file
log4j.rootLogger = trace,console,dailyFile
log4j.appender.console = org.apache.log4j.ConsoleAppender
#log4j.appender.console.layout = org.apache.log4j.SimpleLayout
log4j.appender.console.layout = org.apache.log4j.PatternLayout
log4j.appender.console.layout.conversionPattern = [%-10p]%r %l %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
# %m   输出代码中中指定的日志信息
# %p   输出优先级, 及 DEBUG、INFO等
# %n   换行符(windows平台的换行符为"\r\n", Unix平台为"\n")
# %r   输出自应用启动到输出该Log信息耗费的毫秒数
# %c   输出打印语句所属的类的全名
# %t   输出产生该日志的线程全名
# %d   输出服务器当前时间,默认为ISO08601, 也可以指定格式, 如: %d{yyyy年MM月dd日 HH:mm:ss}
# %l   输出日志时间的发生的位置,包括类名、线程以及在代码中的行数, 如: Test.main(Test.java:10)
# %F   输出日志消息产生时所在的文件名称
# %L   输出代码中的行号
# %%   输出一个"%"的字符


# 按照时间规则拆分的 appender 对象
log4j.appender.dailyFile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.dailyFile.layout = org.apache.log4j.PatternLayout
log4j.appender.dailyFile.layout.conversionPattern = [%-10p]%r %l %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n 
log4j.appender.dailyFile.file = E:\\workspace\\data\\log4j.log
log4j.appender.dailyFile.encoding = UTF-8
log4j.appender.dailyFile.datePattern = '.'yyyy-MM-dd-HH-mm-ss


# 按照文件大小拆分的 appender 对象
log4j.appender.rollingFile = org.apache.log4j.RollingFileAppender
log4j.appender.rollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.rollingFile.layout.conversionPattern = [%-10p]%r %l %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n 
log4j.appender.rollingFile.file = E:\\workspace\\data\\log4j.log
log4j.appender.rollingFile.encoding = UTF-8
# 指定日志文件内容的大小
log4j.appender.rollingFile.maxFileSize = 1kb
# 指定日志文件的数量
log4j.appender.rollingFile.maxBackupIndex = 3


log4j.appender.file = org.apache.log4j.FileAppender
log4j.appender.file.layout = org.apache.log4j.PatternLayout
log4j.appender.file.layout.conversionPattern = [%-10p]%r %l %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n 
log4j.appender.file.file = E:\\workspace\\idea_work\\flink\\Flink-2023\\src\\main\\java\\com\\sgg\\log\\log4j.log
log4j.appender.file.encoding = UTF-8